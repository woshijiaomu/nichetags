% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nichenet.R
\name{Dnichenetwork}
\alias{Dnichenetwork}
\title{Calculate niche-niche connections with connectome data from nichetag method}
\usage{
Dnichenetwork(
  scObject,
  groupby = "cell_clusters",
  share_method = "min",
  direction = FALSE
)
}
\arguments{
\item{scObject}{Seurat, input seurat object in which tag expression matrix is merged in gene expression matrix}

\item{groupby}{character, a colname in meta data of seurat object, used for clone defination}

\item{share_method}{min,max,mean, mothed to calculate connection strength between different clones}

\item{direction}{TorF, if or not to distinguish tag-sender or tag-receiver}
}
\value{
a list contains connectome information of all niches:
\describe{
  \item{tag_matrix}{data.frame, tag expression matrix of all cells}
  \item{cell_type}{factor, cell type or state used for clone defination}
  \item{cell_tags}{numeric, total expression of each tag}
  \item{niche_size}{integer, covered cell number of each tag}
  \item{niche_celltypes}{integer, covered cell types or cell states of each tag}
  \item{niche_interaction}{data.frame, overlapped cell numbers of tag-tag pairs}
  \item{code2celltype}{character,corresponding celltype of each celltypes code positons}
  \item{code2tag}{character, corresponding tag of each tag code positons}
  \item{cell_barcode}{character, code of each cell, tagcode+celltypecode}
  \item{clone}{list, eche element represent a tag expression matrix of each clone}
  \item{clone_size}{integer, covered cell number of each clone}
  \item{niche}{list, mean tag expression of covered cells of all covered clone of each tag}
  \item{clone_interaction}{data.frame, overlapped tag expression of clone-clone pairs}
  \item{cloneID}{integer, order of clones when make graph with graph_from_data_frame in igraph }
}
}
\description{
This fuction use tag expression matrix to infer the connection among niches labeled with different nichetags
}
\examples{
nnt=Dnichenetwork(scObject,groupby="cell_clusters")
summary(nnt)
nnt=nichenetwork(scObject,groupby="cell_clusters",share_method="mean")
dnnt=Dnichenetwork(scObject,groupby="cell_clusters",direction = T)
}
